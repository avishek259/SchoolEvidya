angular.module('schoolApp', ['ionic','schoolApp.accountControl','schoolApp.gpsControl','schoolApp.tabsController','schoolApp.mainController','schoolApp.loginController','schoolApp.dashBoardControl','schoolApp.routing','schoolApp.services','schoolApp.constants','schoolApp.serviceInterface']) 

    .config([ '$ionicConfigProvider','$compileProvider', '$httpProvider', function($ionicConfigProvider,$compileProvider,$httpProvider) {

        $ionicConfigProvider.tabs.position("bottom");
        $ionicConfigProvider.tabs.style("standard"); 
        $compileProvider.imgSrcSanitizationWhitelist(/\/img|..\/\b/);
       
     //   $httpProvider.defaults.headers.common['Access-Control-Allow-Origin'] = '*';
        $httpProvider.defaults.headers.common['Content-Type']= 'application/json; charset=utf-8';
    //    $httpProvider.defaults.headers.post = {};
      
    }])
    .run(
    	function($ionicPlatform) {
  			$ionicPlatform.ready(function() {

          //TODO

  			})
  		}
  	);




var routing = angular.module('schoolApp.routing',[]);

routing.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider){

	$stateProvider
            
            .state('main', {
                url : '/main',
                templateUrl : 'mainContainer.html',
                abstract : true,
                controller : 'MainController'
            })
            .state('main.tabs', {
                 url: '/tabs',
                 views: {
                     'menuContent': {
                         templateUrl: 'tabs.html',
                         controller : 'TabsPageController'
                     }
                 }
            })
            .state('main.tabs.dash', {
                url: '/dash',
                views: {
                'tab-dash': {
                templateUrl: 'app/templates/tab-dash.html',
                controller: 'DashCtrl'
                }
                }
            })
            .state('main.tabs.gps', {
                url: '/gps',
                views: {
                'tab-gps': {
                templateUrl: 'app/templates/tab-gps.html',
                controller: 'gpsController'
                }
                }
            })
            .state('main.tabs.myaccount', {
                url: '/myaccount',
                views: {
                'tab-account': {
                templateUrl: 'app/templates/tab-account.html',
                controller: 'accountController'
                }
                }
            })
            .state('login', {
                 url: '/login',
                templateUrl: 'app/templates/login.html',
                controller:'LoginCtrl'
            });

            $urlRouterProvider.otherwise('/login');

	}]
)
var accountControl = angular.module('schoolApp.accountControl',[]);

accountControl.controller('accountController', [ '$scope','$rootScope', function($scope,$rootScope) {
        
 
}])
var dashBoardControl = angular.module('schoolApp.dashBoardControl',[]);

dashBoardControl.controller('DashCtrl', function($scope,$ionicPopup,$timeout,serviceUtility,requestURL,$ionicModal,$ionicSlideBoxDelegate,$rootScope,LoginService) {
  
  //To hide the loader in case of remember me flow - where auth token is in local storage and loader shown in login page
  //To do : move the loader utility to common utility service from login service .
  LoginService.hide();  
  $scope.groups = []; 

  $ionicModal.fromTemplateUrl('./app/templates/modalpopup.html', {
    scope: $scope
  }).then(function(modal) {
    $scope.notificationmodal = modal;
  });

  /**
  * This function would be called when the image is changed in the slideshow.
  *
  */
  $scope.slideChanged = function(index) {
      $scope.slideIndex = index;
  };

  $scope.aImages = [{
        'src' : './app/img/diwalicrackers.png', 
        'msg' : ''
      }, {
        'src' : './app/img/diwali.png', 
        'msg' : ''
      }, { 
        'src' : './app/img/diwalilights.png', 
        'msg' : ''
      }
  ];

  $scope.openModal = function() {
      $scope.notificationmodal.show();
      $ionicSlideBoxDelegate.update();
  };
  

  
  for (var i=0; i<2; i++) {
    $scope.groups[i] = {
      name: "Leave Request",
      items: []
    };
  }

  $scope.items = [
    { id: 0 },
    { id: 1 },
    { id: 2 },
    { id: 3 },
    { id: 4 }
  ];

  $scope.groups[0].name="Leave Request";
  $scope.groups[1].name="Notification History";

  $scope.sampledate = new Date();


  $scope.toggleGroup = function(group) {
    if ($scope.isGroupShown(group)) {
      $scope.shownGroup = null;
    } else {
      $scope.shownGroup = group;
    }
  };
  $scope.isGroupShown = function(group) {
    return $scope.shownGroup === group;
  };

  /**
  *This method is used to make the service call to apply the leave .
  *
  */
  $scope.applyLeave = function(){

    var url = requestURL.BASEURL+requestURL.SAVELEAVENOTE_URL;

    var fromDate = new Date();
    var toDate = new Date(fromDate.getTime()+(5*24*60*60*1000));

    var requestObject = {};

    requestObject.DeviceID=524241408;
    requestObject.studentId="Hardik Amlani";
    requestObject.LeaveTypeID="Sick Leave";
    requestObject.LeaveFrom = fromDate.getTime();
    requestObject.LeaveTo = toDate.getTime();
    requestObject.NoOfDays = daysDifference(fromDate,toDate);
    requestObject.Remarks = "This is a Dummy Request";
    requestObject.ApprovalStatus =0;
    requestObject.IsActive = 1;


    serviceUtility.ajaxJSONPost(url,requestObject).then(
      function(response){
        var respObj =   serviceUtility.successServiceCallBack(response);
        console.log(JSON.stringify(respObj));
        $scope.showAlert('Leave request submitted successfully.');
      },
      function(response){
        var responseObject = serviceUtility.responsefailureCallBack(response);
        $scope.showAlert(responseObject.errorString);
      }

    )

    
  }


   // An alert dialog
  $scope.showAlert = function(message) {
   var alertPopup = $ionicPopup.alert({
     title: 'Result',
     template: message
   });

   alertPopup.then(function(res) {
     console.log('Message logged');
   });
 };


function daysDifference(fromDate,toDate){

    var retValue = 1;

    if(angular.isDefined(fromDate) && angular.isDefined(toDate)){
      retValue = (toDate.getTime() - fromDate.getTime())/(24*60*60*1000);
    }

    return retValue;
}



})
var gpsControl = angular.module('schoolApp.gpsControl',[]);

gpsControl.controller('gpsController', [ '$scope','$rootScope', function($scope,$rootScope) {
        
 
}])
var loginController = angular.module('schoolApp.loginController',[]);

loginController.controller('LoginCtrl', function ($scope, LoginService, $timeout, $ionicPopup, $ionicPlatform, $state,$rootScope,$ionicModal,$ionicSlideBoxDelegate,requestURL,serviceUtility){
        $scope.data = {};
        $scope.loginObj ={username:'',password:''};
        $scope.tokenExist = false;
        $scope.remember = {
        val : true
        };
        $scope.login = function() {

            var url = requestURL.BASEURL+requestURL.LOGINSERVICE_URL;
            var requestObject={};
            requestObject.UserName = $scope.loginObj.username;
            requestObject.Password=$scope.loginObj.password;

            serviceUtility.ajaxJSONPost(url,requestObject).then(
             function(response){
                 var respObj =   serviceUtility.successServiceCallBack(response);
                 if($scope.remember.val){
                    LoginService.storeUsercreds(name + '.' + 'yourServerToken');
                }
                 $rootScope.titleofpage = 'DashBoard';
                $state.go('main.tabs.dash');

            
             },
            function(response){
                  var responseObject = serviceUtility.responsefailureCallBack(response);
                    var alertPopup = $ionicPopup.alert({
                    title: 'Login failed!',
                    template: 'Please check your credentials!'
                });
             }

             )

        };

       

        $scope.checkTokenExist = function() {
              $scope.tokenExist =  LoginService.loadUserCredentials(); 
              if($scope.tokenExist){
                    // Start showing the progress
                    LoginService.show(); 
                      $timeout( function(){
                        LoginService.hide();
                        $rootScope.titleofpage = 'DashBoard';
                         $state.go('main.tabs.dash'); 
                      }, 500 );
                }
        };

        // Ready functions
        $ionicPlatform.ready(function() {
                
           $scope.checkTokenExist();

        });

        $ionicModal.fromTemplateUrl('./app/templates/newuserRegistration.html', {
            scope: $scope
        }).then(function(modal) {
             $scope.userRegistration = modal;
        });

        $ionicModal.fromTemplateUrl('./app/templates/forgotPasswordScreen.html', {
            scope: $scope
        }).then(function(modal) {
             $scope.forgotPassword = modal;
        });
        
        $scope.openModal = function() {
            $scope.userRegistration.show();
            $ionicSlideBoxDelegate.update();
        };
})
var mainController = angular.module('schoolApp.mainController',[]);

mainController.controller('MainController', [ '$scope', function($scope) {
        $scope.toggleMenu = function() {
            $scope.sideMenuController.toggleLeft();
        }
}])
var tabsControl = angular.module('schoolApp.tabsController',[]);

tabsControl.controller('TabsPageController', [ '$scope', '$state','$rootScope', function($scope, $state,$rootScope) {
        
        
        $scope.leftButtons = [{
            type: 'button-icon icon ion-navicon',
            tap: function(e) {
                $scope.toggleMenu();
            }
        }];

        $scope.changetitle = function(inputname){

        	switch(inputname){

        		case 1 :{
					$rootScope.titleofpage = 'DashBoard';
					$state.go('main.tabs.dash');
        			break;
        		}

        		case 2:{
					$rootScope.titleofpage = 'Tracking';
					$state.go('main.tabs.gps');
        			break;
        		}

        		case 3:{
        			$rootScope.titleofpage = 'Subscription';
        			$state.go('main.tabs.myaccount')
        		}

        		default:{

        			break;
        		}

        	}

        }

}])
var conObj =angular.module('schoolApp.constants',[]);

conObj.constant('requestURL',{

 'BASEURL' : 'http://evidyaMobileService.iappsforme.com/', 
 'SAVELEAVENOTE_URL':'Parentservice.svc/SaveLeaveNote',
 'LOGINSERVICE_URL':'api/Login/'  

});

conObj.constant('USER_ROLES', {
  admin: 'admin_role',
  parent: 'parent_role'
});
var servObj = angular.module('schoolApp.serviceInterface',[]);

servObj.service('serviceUtility',function($http){

	this.ajaxJSONPost = function(url,reqValues){
			return $http({
				url:url,
				method:'POST',
				data:reqValues,
			/*	headers: {
        			'Content-Type': 'application/x-www-form-urlencoded'  //'application/json'
    			} */

			});
	}

	this.successServiceCallBack= function(response){

		var responseObject = {};

		if(response.status==200){
			responseObject = response.data;
		}
		return responseObject;
	}

	this.responsefailureCallBack = function(responsedt){

        var responseObject={};
        switch(responsedt.status){


            case 400:{
                responseObject.statusCode = responsedt.status;
                responseObject.errorString = "Your Request is inValid";
                break;
            }

            case 401:{
                responseObject.statusCode = responsedt.status;
                responseObject.errorString = "Your are unauthorized for the request you have made";
                break;
            }
            case 403:{
                responseObject.statusCode = responsedt.status;
                responseObject.errorString = "Your are forbidden to access the server";
                break;
            }
            case 404:{
                responseObject.statusCode = responsedt.status;
                responseObject.errorString = "The resource you are trying to access is not found on the server.";

                break;
            }
            case 408:{
                responseObject.statusCode = responsedt.status;
                responseObject.errorString = "Your Request has timed out";
                break;
            }
            default:{
                responseObject.statusCode = responsedt.status;
                responseObject.errorString= "Technical error has occured , please try again later."
            }


        }

       return responseObject;
    } 

})
angular.module('schoolApp.services', [])

.service('LoginService', function($q,$http,$ionicLoading,$timeout,USER_ROLES,requestURL ,serviceUtility) {
      var LOCAL_TOKEN_KEY = 'yourTokenKey';
      var username = '';
      var isAuthenticated = false;
      var authToken;
      var role = '';
    return {
        loginUser: function(name, pw,rem) {
            var deferred = $q.defer();
            var promise = deferred.promise;

            var requestObject={};
 
            if (name == 'user' && pw == 'secret') {
                //Logic to store in localstorage based on remember me
                // Make a request and receive your auth token from your server
                
                if(rem){
                    storeUserCredentials(name + '.' + 'yourServerToken');
                }

                deferred.resolve('Welcome ' + name + '!');
            } else {
                deferred.reject('Wrong credentials.');
            }
            
            promise.success = function(fn) {
                promise.then(fn);
                return promise;
            }
            promise.error = function(fn) {
                promise.then(null, fn);
                return promise;
            }
            return promise;
        },

        logout : function() {
        destroyUserCredentials();
        },
        username: function() {return username;},
        show:  function() {
            $ionicLoading.show({
            template: '<p>Loading...</p><ion-spinner icon="ripple" class="spinner-calm"></ion-spinner>'
            });
        },
        hide: function(){
                $ionicLoading.hide();
        },
        isAuthenticated: function() {return isAuthenticated;},
        loadUserCredentials : function(){
            var token = window.localStorage.getItem(LOCAL_TOKEN_KEY);
            if (token) {
              useCredentials(token);
              return token;
            }
        },
        storeUsercreds: function(token){
            storeUserCredentials(token);
        }
    };
    

    function destroyUserCredentials() {
    authToken = undefined;
    username = '';
    isAuthenticated = false;
    $http.defaults.headers.common['X-Auth-Token'] = authToken;
    window.localStorage.removeItem(LOCAL_TOKEN_KEY);
    }    

    //funtion to use token and do further logic
    function useCredentials(token) {
    username = token.split('.')[0];
    isAuthenticated = true;
    authToken = token;
 
    if (username == 'admin') {
      role = USER_ROLES.admin
    }
    if (username == 'user') {
      role = USER_ROLES.parent
    }
    // Set the token as header for your requests!
    $http.defaults.headers.common['X-Auth-Token'] = token;
    }

    function storeUserCredentials(token) {
    window.localStorage.setItem(LOCAL_TOKEN_KEY, token);
    useCredentials(token);
    }

    

});
